pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/anand16071990/javaapp-test.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://10.25.59.18:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "anand3927/javaapp:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('dockerhub')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry("https://registry.hub.docker.com", REGISTRY_CREDENTIALS) {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "javaapp-test"
            GIT_USER_NAME = "anand16071990"
        }
        steps {
              withCredentials([string(credentialsId: PAT_CREDENTIALS_ID, variable: 'PAT')]) {
                 sh 'git config --global user.email "anand.official1607@gmail.com"'
                 sh 'git config --global user.name "anand16071990"'
                 sh 'git config --global --add safe.directory "*"'
                 sh 'BUILD_NUMBER=${BUILD_NUMBER}'
                 sh 'cat java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml'
                 sh "sed -i 's/replaceImageTag/${BUILD_NUMBER}/g' java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml"
                 sh 'cat java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml'
                 sh 'git add --all'
                 sh 'git commit -m "Updated the deploy yaml | Jenkins Pipeline"'
                 sh 'git remote -v'
                 sh 'git push https://x-access-token:${PAT}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} main'
          }
      }
    }
  }
}
